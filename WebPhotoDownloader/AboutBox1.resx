<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>